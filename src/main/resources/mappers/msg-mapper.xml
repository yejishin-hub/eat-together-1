<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="msg">
	<!-- navi 카운트 -->
	<select id="getAdminCount" resultType="int">
		select count(*) from msg
		where msg_receiver = #{msg_receiver} and msg_sender='administrator'
		and
		receiver_del=0 and msg_title not like '%[1:1%'
	</select>
	<select id="getSenderCount" resultType="int">
		select count(*) from msg
		where msg_receiver = #{msg_receiver} and msg_sender!='administrator'
		and
		receiver_del=0
	</select>
	<select id="getReceiverCount" resultType="int">
		select count(*) from
		msg
		where msg_sender = #{msg_receiver} and
		sender_del = 0 and msg_title
		not like '%[1:1문의]%'
	</select>
	<!--select 문 -->
	<!-- 받은쪽지함 -->
	<select id="selectBySender" resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by msg_date desc)
		rnum from msg where
		msg_receiver = #{msg_receiver} and
		msg_sender!='administrator' and
		receiver_del=0) where rnum between
		#{start} and #{end}
	</select>
	<!-- 공지쪽지함 -->
	<select id="selectByAdmin" resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by msg_date desc)
		rnum from msg where
		msg_receiver =#{msg_receiver} and msg_sender = 'administrator' and
		receiver_del=0 and msg_title not like '%[1:1%') where rnum between
		#{start} and #{end}
	</select>
	<!-- 보낸쪽지함 -->
	<select id="selectByReceiver"
		resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by
		msg_date desc)
		rnum from msg where msg_sender = #{msg_receiver} and
		sender_del = 0 and msg_title not like '%[1:1문의]%') where rnum between
		#{start} and #{end}
	</select>
	<!-- 쪽지보기 -->
	<select id="selectBySeq" resultType="coma.spring.dto.MsgDTO">
		select * from msg where
		msg_seq= #{value}
	</select>
	<!-- 새로운 메세지 카운트 -->
	<select id="newmsg" resultType="java.lang.Integer">
		select count(*) from msg where
		msg_receiver = #{value} and msg_view=0 and receiver_del=0 and
		msg_title not like
		'%[1:1문의]%'
	</select>

	<select id="newMsgByAdmin" resultType="java.lang.Integer">
		select count(*) from msg
		where msg_receiver=#{value}
		and msg_view=0 and
		msg_sender='administrator' and receiver_del=0 and msg_title not like
		'%[1:1문의]%'
	</select>

	<select id="newMsgByNick" resultType="java.lang.Integer">
		select count(*) from msg
		where msg_receiver=#{value}
		and msg_view=0 and
		msg_sender!='administrator' and receiver_del=0
	</select>
	<!--insert 문 -->



	<insert id="insert">
		insert into msg
		values(msg_seq.nextval,#{msg_sender},#{msg_receiver},#{msg_title},#{msg_text},sysdate,0,0,0)
	</insert>

	<insert id="insertWelcome">
		insert into msg
		values(msg_seq.nextval,'administrator',#{value},'가입을축하합니다.','회원가입을 축하합니다!    맛있는 음식과 새로운 사람을 만나기 위한 첫걸음을 시작하세요!      새로운 맛집 친구와 함께 즐거운 모임을 시작하시길
		바랍니다.감사합니다.',sysdate,0,0,0)
	</insert>
	<!-- 읽음처리 -->
	<update id="view">
		update msg set msg_view=1 where msg_seq=#{value}
	</update>
	<!-- 보낸사람삭제 -->
	<update id="sender_del" parameterType="map">
		update msg set sender_del=1 where msg_seq in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item,jdbcType=VARCHAR}
		</foreach>
	</update>
	<!-- 받는사람삭제 -->
	<update id="receiver_del" parameterType="map">
		update msg set receiver_del=1 where msg_seq in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item,jdbcType=VARCHAR}
		</foreach>
	</update>


	<insert id="msgNotice">
		insert into
		msg(msg_seq,msg_sender,msg_receiver,msg_title,msg_text,msg_date,msg_view,sender_del,receiver_del)
		select
		msg_seq.nextval,'administrator',nickname,#{msg_title},#{msg_text},sysdate,0,0,0
		from member
	</insert>

</mapper>
