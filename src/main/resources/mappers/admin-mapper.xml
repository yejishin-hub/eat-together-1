<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Admin">
	<!-- 수지 / 전체회원수 구하기 -->
	<select id="getAllMemberCount" resultType="int">
		select count(*) from
		member where not id='administrator'
	</select>

	<!-- by 지은, 회원정보 리스트 rnum 적용해서 전체회원정보 뽑기 -->
	<select id="memberList" resultType="coma.spring.dto.MemberDTO">
		select * from (select
		member.*, row_number() over(order by 1 desc) rnum from
		member where not
		id='administrator') where rnum between #{start} and
		#{end}
	</select>

	<!-- by 지은, 회원관리 옵션순으로 회원정보 출력하기 -->
	<select id="selectByOption"
		resultType="coma.spring.dto.MemberDTO">
		select * from (select
		member.*, row_number() over(order by
		${targetColumn} desc) rnum from
		member) where rnum between #{start} and
		#{end}
	</select>

	<!-- by 지은, 회원탈퇴 처리하기_20200714 -->
	<delete id="memberOut" parameterType="map">
		delete from member where id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item,jdbcType=VARCHAR}
		</foreach>

	</delete>

	<!-- by 수지, 모임글 리스트 뽑기 -->
	<select id="partyList" resultType="coma.spring.dto.PartyDTO">
		select * from (select
		party.*,
		row_number() over(order by 1 desc) rnum from
		party) where rnum between
		#{start} and
		#{end}
	</select>

	<!-- by 수지, 모임글 옵션순으로 회원정보 출력하기 -->
	<select id="partyByOption" resultType="coma.spring.dto.PartyDTO">
		select * from (select
		party.*, row_number() over(order by
		${targetColumn} desc, party.seq desc) rnum from
		party) where rnum between #{start} and
		#{end}
	</select>
	
	<!-- by 태훈, 신고 리스트 출력 -->
	<select id="reportList" resultType="coma.spring.dto.ReportDTO">
		select * from (select report.* , row_number() over(order by seq desc)
		rnum from report) where rnum between #{start} and #{end}
	</select>

	<!-- 여기는 네비 카운트 -->
	<!-- 관리자 받은 쪽지함 -->
	<select id="getSenderCount" resultType="int">
		select count(*) from msg
		where msg_receiver = #{msg_receiver} and msg_sender!='administrator'
		and
		receiver_del=0 and msg_title not like '%[1:1문의]%'
	</select>
	<!-- 관리자 보낸 쪽지함 -->
	<select id="getReceiverCount" resultType="int">
		select count(*) from
		msg
		where msg_sender = #{msg_receiver} and
		sender_del = 0 and msg_title
		not like '%[1:1답변]%'
	</select>
	<!-- 관리자 휴지통 -->
	<select id="getGarbageCount" resultType="int">
		select count(*) from
		msg where
		receiver_del=1 and sender_del=1 and msg_title not like
		'%[1:1%'
	</select>

	<!-- 받은쪽지함 -->
	<select id="selectBySender" resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by msg_date desc)
		rnum from msg where
		msg_receiver = #{msg_receiver} and
		msg_sender!='administrator' and
		receiver_del=0 and msg_title not like '%[1:1문의]%') where rnum between
		#{start} and #{end}
	</select>
	<!-- 보낸쪽지함 -->
	<select id="selectByReceiver"
		resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by
		msg_date desc)
		rnum from msg where msg_sender = #{msg_receiver} and
		sender_del = 0 and msg_title not like '%[1:1문의]%') where rnum between
		#{start} and #{end}
	</select>
	<!-- 관리자 휴지통 -->
	<select id="selectByGarbage"
		resultType="coma.spring.dto.MsgDTO">
		select * from (select
		msg.*, row_number() over(order by
		msg_date desc)
		rnum from msg where
		receiver_del=1 and sender_del=1 and
		msg_title not like
		'%[1:1%') where rnum between
		#{start} and #{end}
	</select>
	<!-- 삭제된 메세지 복구 -->
	<update id="saveMsg">
		update msg set receiver_del=0,sender_del=0 where msg_seq=#{value}
	</update>
	<!-- 태훈 신고 내용 보기 -->
	<select id="getReportContent" resultType="coma.spring.dto.ReportDTO">
		select * from report where seq = #{seq}
	</select>
	<!-- 태훈 등록 맛집 갯수 -->
	<select id="mapCount" resultType="int">
		select count(*) from map
	</select>
	<!-- 태훈 미 접수 신고 갯수 -->
	<select id="reportCount" resultType="int">
		select count(*) from report where status = 0
	</select>
	<!-- 태훈 미 답변 문의 갯수 -->
	<select id="questionCount" resultType="int">
		select count (*) from msg
		where msg_title like '%[1:1문의]%' and msg_sender != 'administrator' and sender_del=0 and msg_view &lt; 2
	</select>
	<!-- 태훈 연령대 별 회원 수 -->
	<select id="memberCountByAge" resultMap="agemap">
		<!-- select 연령 , count(*) as 수 from(select case when floor((to_char(sysdate, 'YYYY') -SUBSTR(birth,1,4)) / 10) * 10 >= 50 then 50 else (floor((to_char(sysdate, 'YYYY') -SUBSTR(birth,1,4)) / 10) * 10)  end as 연령 from member) o group by 연령 order by 연령 asc -->
		select 연령 , count(*) as 수 from(select case when floor((to_char(sysdate, 'YYYY') -SUBSTR(birth,1,4)) / 10) * 10 >= 50 then '50대' else (floor((to_char(sysdate, 'YYYY') -SUBSTR(birth,1,4)) / 10) * 10)||'대'  end as 연령 from member) o group by 연령 order by 연령 asc
	</select>	
	<!-- 태훈 위 쿼리 위한 맵 -->
	<resultMap type="hashMap" id="agemap">
	    <!-- <result javaType="java.lang.Integer" column="연령" property="연령"></result> -->
	    <result javaType="java.lang.String" column="연령" property="연령"></result>
	    <result javaType="java.lang.Integer" column="수" property="수"></result>
	</resultMap>
	<!-- 태훈 요일별 모집 개수 -->
	<select id="partyCountByDay" resultMap="partymap">
		select 요일 , count(*) as 수 from (select to_char(meetdate, 'd') as 요일 from party) group by 요일 order by 요일 asc
	</select>
	<!-- 태훈 위 쿼리 위한 맵 -->
	<resultMap type="hashMap" id="partymap">
	    <result javaType="java.lang.String" column="요일" property="요일"></result>
	    <result javaType="java.lang.Integer" column="수" property="수"></result>
	</resultMap>
	

</mapper>